{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./frontend/admin/core/components/top-nav.jsx","webpack:///./frontend/admin/messages/actions.js","webpack:///./frontend/admin/utils/index.js","webpack:///./frontend/admin/dictionaries/actions.js","webpack:///./frontend/admin/dictionaries/components/list-page.jsx","webpack:///./frontend/admin/dictionaries/components/form.jsx","webpack:///./frontend/admin/dictionaries/components/new-page.jsx","webpack:///./frontend/admin/articles/components/list-page/filter-dictionary.jsx","webpack:///./frontend/admin/tasks/actions.js","webpack:///./frontend/admin/articles/components/list-page/filter-task.jsx","webpack:///./frontend/admin/articles/actions.js","webpack:///./frontend/admin/articles/components/list-page.jsx","webpack:///./frontend/admin/articles/components/textarea.jsx","webpack:///./frontend/admin/articles/components/form/task.jsx","webpack:///./frontend/admin/articles/components/form.jsx","webpack:///./frontend/admin/articles/components/new-page.jsx","webpack:///./frontend/admin/articles/components/edit-page.jsx","webpack:///./frontend/admin/messages/messages.jsx","webpack:///./frontend/admin/messages/reducers.js","webpack:///./frontend/admin/dictionaries/reducers.js","webpack:///./frontend/admin/articles/reducers.js","webpack:///./frontend/admin/index.jsx","webpack:///./frontend/admin/home/components/home-page.jsx","webpack:///./frontend/admin/dictionaries/components/index.jsx","webpack:///./frontend/admin/articles/components/index.jsx"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","installedChunks","push","Object","prototype","hasOwnProperty","call","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","1","exports","module","l","m","c","d","name","getter","o","defineProperty","configurable","enumerable","get","r","value","n","__esModule","object","property","p","jsonpArray","window","oldJsonpFunction","bind","slice","NavLink","path","children","react_default","a","createElement","react_router_dom_es","match","className","to","top_nav","es","store","user","Component","render","this","props","showMessage","message","level","dispatch","id","Date","now","type","setTimeout","ifOK","f","ok","req","url","options","actionPrefix","errorMessagePrefix","successMessage","fetch","_extends","credentials","then","response","Promise","resolve","reject","json","catch","text","Error","statusText","showSuccessMessage","error","showDangerMessage","console","assembleURLQuery","params","u","URLSearchParams","defaults","_defaults","key","keys","set","toString","fetchList","leaveList","createDictionary","formData","method","body","JSON","stringify","list_page","state","dictionaries","list","redux_es","componentWillMount","componentWillUnmount","class","map","item","Title","form_Form","constructor","super","handleInputChange","handleSubmit","event","target","checked","setState","[object Object]","preventDefault","onSave","onSubmit","onChange","required","onCancelRedirectTo","new_page","history","filter_dictionary","dicts","config","Dicts","ev","parseInt","ID","actions_fetchList","urlQuery","filter_task","tasks","Data","articles_actions_fetchList","actions_leaveList","createRecord","leaveRecord","fetchRecord","articleID","updateRecord","components_list_page","articles","list_page_extends","getDefaultState","parse","localStorage","getItem","callback","setItem","offset","limit","filter$DictID","filter$TitlePrefix","filter$TaskID","setFilterState","width","role","aria-label","onClick","Math","max","textarea_Textarea","shouldComponentUpdate","nextProps","nextState","simplemde","setElement","element","newSimpleMDE","codemirror","on","toTextArea","textarea_extends","ref","el","smde","simplemde_default","autofocus","spellChecker","autoDownloadFontAwesome","toolbar","action","toggleBold","title","toggleItalic","toggleStrikethrough","toggleBlockquote","toggleUnorderedList","toggleOrderedList","headwordAction","addKeyMap","Shift-Alt-W","Cmd-S","selection","getSelection","replaceSelection","focus","task_Task","keyUpHandler","document","addEventListener","removeEventListener","e","index","onToggle","ctrlKey","keyCode","stopPropagation","task","it","style","Status","Task","components_form","toggleTask","Tasks","form_extends","DictID","rows","Content","submitButton","click","button","components_new_page","edit_page","record","messages","reducers","filter","dictionaries_reducers","articles_reducers","reducers_extends","rootReducer","verbumInitData","lib_default","react_dom_default","basename","exact","component","getElementById"],"mappings":"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","file":"admin.bundle.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \tvar installedChunks = {\n \t\t1: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([\"DT9B\",0]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { Link, Route, withRouter } from 'react-router-dom'\n\nclass TopNav extends React.Component {\n    render() {\n        return (<nav className=\"navbar is-link\">\n            <div className=\"navbar-brand\">\n                <Link className=\"navbar-item has-text-weight-bold is-size-4\" to=\"/\">Verbum</Link>\n            </div>\n            <div className=\"navbar-menu\">\n                <div className=\"navbar-start\">\n                    <NavLink path=\"/dictionaries\">Dictionaries</NavLink>\n                    <NavLink path=\"/articles\">Articles</NavLink>\n                </div>\n                <div className=\"navbar-end\">\n                    <div className=\"navbar-item\">\n                        {this.props.user.name}\n                    </div>\n                </div>\n            </div>\n        </nav>)\n    }\n}\n\nconst NavLink = ({ path, children }) => <Route path={path} children={({ match }) => (\n    <Link className={`navbar-item ${match ? 'is-active' : ''}`} to={path}>{children}</Link>\n)} />\n\nexport default withRouter(connect(\n    store => ({\n        user: store.user\n    }),\n)(TopNav))\n","export const showMessage = (message, level = 'info') => (dispatch) => {\n    const id = Date.now()\n    dispatch({\n        type: 'MESSAGES/SHOW',\n        message: { id, message, level },\n    })\n    setTimeout(() => {\n        dispatch({\n            type: 'MESSAGES/DISMISS',\n            message: { id },\n        })\n    }, 5000)\n}\n\nexport const showInfoMessage = message => showMessage(message, 'info')\nexport const showWarningMessage = message => showMessage(message, 'warning')\nexport const showDangerMessage = message => showMessage(message, 'danger')\nexport const showSuccessMessage = message => showMessage(message, 'success')\nexport const showPrimaryMessage = message => showMessage(message, 'primary')\n","import { showSuccessMessage, showDangerMessage } from '../messages/actions'\n\nexport const ifOK = f => ok => (ok ? f(ok) : false)\n\nexport const req = (url, { options, actionPrefix, errorMessagePrefix, successMessage }) => (dispatch) => {\n    dispatch({ type: `${actionPrefix}/PENDING` })\n    return fetch(url, { ...options, credentials: 'include' })\n        .then(response => new Promise((resolve, reject) => {\n            if (response.ok) {\n                response.json()\n                    .then(json => resolve(json))\n                    .catch(() => resolve({ data: {} }))\n            } else {\n                response.text().then((text) => {\n                    reject(new Error(text || response.statusText))\n                })\n            }\n        }))\n        .then((json) => {\n            dispatch({ type: `${actionPrefix}/FULFILLED`, ...json })\n            if (successMessage) {\n                dispatch(showSuccessMessage(successMessage))\n            }\n            return json\n        })\n        .catch((error) => {\n            dispatch({ type: `${actionPrefix}/REJECT` })\n            if (errorMessagePrefix) {\n                dispatch(showDangerMessage(`${errorMessagePrefix}: ${error.message}`))\n            }\n            console.error(error)\n            return false\n        })\n}\n\nexport const parseURLSearchParams = (search) => {\n    const u = new URLSearchParams(search)\n    let result = {}\n    for(var pair of u.entries()) {\n        result[pair[0]] = pair[1]\n    }\n    return result\n}\n\nexport const assembleURLQuery = (params) => {\n    const u = new URLSearchParams()\n    const defaults = params._defaults || {}\n    delete params._defaults\n    for (let key of Object.keys(params)) {\n        if (key in defaults && defaults[key] === params[key]) {\n            continue;\n        }\n        u.set(key, params[key])\n    }\n    let result = u.toString()\n    if (result.length > 0) {\n        result = `?${result}`\n    }\n    return result\n}\n","import { req } from '../utils'\n\nexport const fetchList = () => req('/admin/api/dictionaries', {\n    actionPrefix: 'DICTIONARIES/LIST/FETCH',\n    errorMessagePrefix: 'Failed to fetch Dictionaries list',\n})\n\nexport const leaveList = () => ({ type: 'DICTIONARIES/LIST/LEAVE' })\n\nexport const createDictionary = ({ formData }) => req('/admin/api/dictionaries', {\n    options: {\n        method: 'post',\n        body: JSON.stringify(formData),\n    },\n    actionPrefix: 'DICTIONARIES/DICTIONARY/CREATE',\n    errorMessagePrefix: 'Failed to create the dictionary',\n    successMessage: 'Dictionary has been created successfully',\n})\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\n\nimport { fetchList, leaveList } from '../actions'\n\nclass ListPage extends React.Component {\n    componentWillMount() {\n        this.props.fetchList()\n    }\n\n    componentWillUnmount() {\n        this.props.leaveList()\n    }\n\n    render() {\n        const { url } = this.props.match\n        return (<div>\n            <div className=\"level\">\n                <div className=\"level-left\">\n                    <h1 className=\"level-item title\">Dictionaries</h1>\n                </div>\n                <div className=\"level-right\">\n                    <div className=\"field is-grouped level-item\">\n                        <p class=\"control\">\n                            <Link to={`${url}/new`} className=\"button is-link\">New Dictionary</Link>\n                        </p>\n                    </div>\n                </div>\n            </div>\n            <hr />\n            {this.props.data &&\n            <table className=\"table is-hoverable is-fullwidth\">\n                <thead>\n                    <tr><th>Title</th></tr>\n                </thead>\n                <tbody>\n                    {this.props.data.map(item => <tr><td>{item.Title}</td></tr>)}\n                </tbody>\n            </table>\n            }\n\n        </div>)\n    }\n}\n\nexport default connect(\n    state => ({\n        data: state.dictionaries.list,\n    }),\n    dispatch => bindActionCreators({ fetchList, leaveList }, dispatch),\n)(ListPage)\n","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nexport default class Form extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = props.formData\n\n        this.handleInputChange = this.handleInputChange.bind(this)\n        this.handleSubmit = this.handleSubmit.bind(this)\n    }\n\n    handleInputChange(event) {\n        const target = event.target\n        let value = target.type === 'checkbox' ? target.checked : target.value\n        const name = target.name\n\n        this.setState({\n            [name]: value\n        })\n    }\n\n    handleSubmit(event) {\n        event.preventDefault()\n        this.props.onSave({ formData: this.state })\n    }\n\n    render() {\n        return <form onSubmit={this.handleSubmit}>\n            <div class=\"field\">\n                <label class=\"label\">Title</label>\n                <div class=\"control\">\n                    <input className=\"input\"\n                        type=\"text\"\n                        name=\"Title\"\n                        value={this.state.Title}\n                        onChange={this.handleInputChange}\n                        required\n                    />\n                </div>\n            </div>\n            <div className=\"field is-grouped\">\n                <p class=\"control\">\n                    <button className=\"button is-link\" type=\"submit\">Save</button>\n                </p>\n                <p class=\"control\">\n                    <Link className=\"button\" to={this.props.onCancelRedirectTo}>Cancel</Link>\n                </p>\n            </div>\n        </form>\n    }\n}\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\n\nimport Form from './form'\nimport { createDictionary } from '../actions'\nimport { ifOK } from '../../utils'\n\nclass NewPage extends React.Component {\n    render() {\n        const onSave = (data) => {\n            this.props.createDictionary(data)\n                .then(ifOK((data) => this.props.history.push('/dictionaries')))\n        }\n        return (<div>\n            <h1 className=\"title\">Create New Dictionary</h1>\n            <Form\n                formData={{}}\n                onSave={onSave}\n                onCancelRedirectTo=\"/dictionaries\"\n            />\n        </div>)\n    }\n}\n\nexport default connect(\n    state => {},\n    dispatch => bindActionCreators({ createDictionary }, dispatch),\n)(NewPage)\n","import React from 'react'\nimport { connect } from 'react-redux'\n\nclass FilterDictionary extends React.Component {\n    render() {\n        const { value, dicts, onChange } = this.props\n        return (<div class=\"select\">\n            <select value={value} onChange={(ev) => onChange(parseInt(ev.target.value))}>\n                <option value=\"-1\">- Filter by Dictionary -</option>\n                {dicts.map(d => <option value={d.ID}>{d.Title}</option>)}\n            </select>\n        </div>)\n    }\n}\n\nexport default connect(\n    state => ({\n        dicts: state.config.Dicts\n    })\n)(FilterDictionary)\n","import { req, assembleURLQuery } from '../utils'\n\nexport const fetchList = (urlQuery) => req(`/admin/api/tasks${assembleURLQuery(urlQuery)}`, {\n    actionPrefix: 'TASKS/LIST/FETCH',\n    errorMessagePrefix: 'Failed to fetch Tasks list',\n})\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\n\nimport { fetchList } from '../../../tasks/actions'\nimport { ifOK } from '../../../utils'\n\nclass FilterTask extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            tasks: null\n        }\n    }\n    componentWillMount() {\n        this.props.fetchList({}).then(ifOK( data => this.setState({ tasks: data.Data }) ))\n    }\n\n    render() {\n        if (!this.state.tasks) {\n            return null\n        }\n\n        const { value, onChange } = this.props\n        const tasks = this.state.tasks\n        return (<div class=\"select\">\n            <select value={value} onChange={(ev) => onChange(parseInt(ev.target.value))}>\n                <option value=\"-1\">- Filter by Task -</option>\n                {tasks.map(d => <option value={d.ID}>{d.Title}</option>)}\n            </select>\n        </div>)\n    }\n}\n\nexport default connect(\n    state => ({}),\n    dispatch => bindActionCreators({ fetchList }, dispatch),\n\n)(FilterTask)\n","import { req, assembleURLQuery } from '../utils'\n\nexport const fetchList = (urlQuery) => req(`/admin/api/articles${assembleURLQuery(urlQuery)}`, {\n    actionPrefix: 'ARTICLES/LIST/FETCH',\n    errorMessagePrefix: 'Failed to fetch Articles list',\n})\n\nexport const leaveList = () => ({ type: 'ARTICLES/LIST/LEAVE' })\n\nexport const createRecord = ({ formData }) => req('/admin/api/articles', {\n    options: {\n        method: 'post',\n        body: JSON.stringify(formData),\n    },\n    actionPrefix: 'ARTICLES/RECORD/CREATE',\n    errorMessagePrefix: 'Failed to create article',\n    successMessage: 'Article has been created',\n})\n\nexport const leaveRecord = () => ({ type: 'ARTICLES/RECORD/LEAVE' })\n\nexport const fetchRecord = (articleID)  => req(`/admin/api/articles/${articleID}`, {\n    actionPrefix: 'ARTICLES/RECORD/FETCH',\n    errorMessagePrefix: 'Failed to fetch article',\n})\n\nexport const updateRecord = ({ formData }) => req(`/admin/api/articles`, {\n    options: {\n        method: 'post',\n        body: JSON.stringify(formData),\n    },\n    actionPrefix: 'ARTICLES/RECORD/UPDATE',\n    errorMessagePrefix: 'Failed to update article',\n    successMessage: 'Article has been updated',\n})\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\n\nimport FilterDictionary from './list-page/filter-dictionary'\nimport FilterTask from './list-page/filter-task'\nimport { fetchList, leaveList } from '../actions'\nimport { parseURLSearchParams, assembleURLQuery } from '../../utils'\n\nclass ListPage extends React.Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            ...this.getDefaultState(),\n            ...JSON.parse(localStorage.getItem('articles.list-page-state') || '{}')\n        }\n    }\n\n    setState(props, callback) {\n        return super.setState(props, () => {\n            localStorage.setItem('articles.list-page-state', JSON.stringify(this.state))\n            callback()\n        })\n    }\n\n    componentWillMount() {\n        this.fetchList()\n    }\n\n    componentWillUnmount() {\n        this.props.leaveList()\n    }\n\n    fetchList() {\n        this.props.fetchList({\n            offset: this.state.offset,\n            limit: this.state.limit,\n            filter$DictID: this.state.filter$DictID,\n            filter$TitlePrefix: this.state.filter$TitlePrefix,\n            filter$TaskID: this.state.filter$TaskID,\n            _defaults: this.getDefaultState(),\n        })\n    }\n\n    getDefaultState() {\n        return {\n            offset: 0,\n            limit: 20,\n            filter$DictID: -1,\n            filter$TitlePrefix: '',\n            filter$TaskID: -1,\n        }\n    }\n\n    setFilterState(state) {\n        this.setState({ ...state, offset: 0 }, () => { this.fetchList() })\n    }\n\n    render() {\n        const { url } = this.props.match\n        const onPrevPageClick = () => {\n            const offset = Math.max(0, this.state.offset - this.state.limit)\n            this.setState({ offset }, () => { this.fetchList() })\n        }\n\n        const onNextPageClick = () => {\n            const offset = this.state.offset + this.state.limit\n            this.setState({ offset }, () => { this.fetchList() })\n        }\n\n        return (<div>\n            <div className=\"level\">\n                <div className=\"level-left\">\n                    <h1 className=\"level-item title\">Articles</h1>\n                </div>\n                <div className=\"level-right\">\n                    <div className=\"field is-grouped level-item\">\n                        <p class=\"control\">\n                            <Link to={`${url}/new`} className=\"button is-link\">New Article</Link>\n                        </p>\n                    </div>\n                </div>\n            </div>\n            <hr />\n            {/* filter */}\n            <div class=\"field is-grouped\">\n                <p class=\"control\">\n                    <input\n                        class=\"input\"\n                        type=\"text\"\n                        value={this.state.filter$TitlePrefix}\n                        onChange={ev => this.setFilterState({ filter$TitlePrefix: ev.target.value })}\n                    />\n                </p>\n                <p class=\"control\">\n                    <FilterDictionary value={this.state.filter$DictID} onChange={filter$DictID => this.setFilterState({ filter$DictID })} />\n                </p>\n                <p class=\"control\">\n                    <FilterTask value={this.state.filter$TaskID} onChange={filter$TaskID => this.setFilterState({ filter$TaskID })} />\n                </p>\n            </div>\n\n            {this.props.data &&\n                <div>\n                    {/* table */}\n                    <table className=\"table is-hoverable is-fullwidth\">\n                        <thead>\n                            <tr>\n                                <th width=\"1px\">ID</th>\n                                <th>Title</th>\n                                <th width=\"1px\"></th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {this.props.data.map(item => <tr>\n                                <td>{item.ID}</td>\n                                <td>{item.Title}</td>\n                                <td><Link to={`${url}/${item.ID}/edit`} className=\"button\">Edit</Link>\n                                </td>\n                            </tr>)}\n                        </tbody>\n                    </table>\n                </div>\n            }\n            <nav class=\"pagination\" role=\"navigation\" aria-label=\"pagination\">\n                <a class=\"pagination-previous\" onClick={onPrevPageClick}>Previous</a>\n                <a class=\"pagination-next\" onClick={onNextPageClick}>Next page</a>\n            </nav>\n        </div>)\n    }\n}\n\nexport default connect(\n    state => ({\n        data: state.articles.list,\n    }),\n    dispatch => bindActionCreators({ fetchList, leaveList }, dispatch),\n)(ListPage)\n","import React from 'react'\nimport SimpleMDE from 'simplemde'\n\nexport default class Textarea extends React.Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        return nextProps.value != this.simplemde.value()\n    }\n\n    setElement(element) {\n        this.element = element\n        if (element) {\n            this.simplemde = this.newSimpleMDE(element)\n            this.simplemde.codemirror.on('change', () => {\n                this.props.onChange({\n                    target: {\n                        name: this.props.name,\n                        value: this.simplemde.value(),\n                    }\n                })\n            })\n        } else {\n            this.simplemde.toTextArea()\n            this.simplemde = null\n        }\n    }\n\n    render() {\n        return <textarea {...this.props} ref={(el) => {this.setElement(el)}}/>\n    }\n\n    newSimpleMDE(element) {\n        const smde = new SimpleMDE({\n            element,\n            autofocus: true,\n            spellChecker: false,\n            autoDownloadFontAwesome: false,\n            toolbar: [\n                {\n                    name: \"bold\",\n                    action: SimpleMDE.toggleBold,\n                    title: \"Bold\",\n                    className: \"fas fa-bold\",\n                },\n                {\n                    name: \"italic\",\n                    action: SimpleMDE.toggleItalic,\n                    title: \"Italic\",\n                    className: \"fa fa-italic\",\n                },\n                {\n                    name: \"strikethrough\",\n                    action: SimpleMDE.toggleStrikethrough,\n                    title: \"Strikethrough\",\n                    className: \"fa fa-strikethrough\",\n                },\n                {\n                    name: \"quote\",\n                    action: SimpleMDE.toggleBlockquote,\n                    title: \"Quote\",\n                    className: \"fa fa-quote-left\",\n                },\n                \"|\",\n                {\n                    name: \"unordered-list\",\n                    action: SimpleMDE.toggleUnorderedList,\n                    title: \"Generic List\",\n                    className: \"fa fa-list-ul\",\n                },\n                {\n                    name: \"ordered-list\",\n                    action: SimpleMDE.toggleOrderedList,\n                    title: \"Numbered List\",\n                    className: \"fa fa-list-ol\",\n                },\n                \"|\",\n                {\n                    name: \"headword\",\n                    action: ({ codemirror }) => { this.headwordAction(codemirror) },\n                    title: \"Headword\",\n                    className: \"fas fa-heading color-tag\",\n                }\n            ],\n        })\n        smde.codemirror.addKeyMap({\n            'Shift-Alt-W': this.headwordAction,\n            'Cmd-S': this.props.onSave,\n        }, true)\n        return smde\n    }\n\n    headwordAction(codemirror) {\n        const selection = codemirror.getSelection()\n        codemirror.replaceSelection(`<v-hw>${selection}</v-hw>`, 'around')\n        codemirror.focus()\n    }\n}\n","import React from 'react'\n\nexport default class Task extends React.Component {\n    constructor(props) {\n        super(props)\n        this.keyUpHandler = this.keyUpHandler.bind(this)\n    }\n\n    componentWillMount() {\n        document.addEventListener('keyup', this.keyUpHandler)\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('keyup', this.keyUpHandler)\n    }\n\n    keyUpHandler(e) {\n        const { index, onToggle } = this.props\n        if (e.ctrlKey && e.keyCode - 48 == index ) {\n            e.preventDefault()\n            e.stopPropagation()\n            onToggle()\n        }\n    }\n\n    render() {\n        const { onToggle, task: it, index: i } = this.props\n\n        const style = it.Status == 'PENDING' ? 'is-info' : 'is-success'\n        return (<div>\n            <a class={`button ${style}`} onClick={onToggle}>\n                ({i})&nbsp;{it.Task.Title}\n            </a>\n        </div>)\n    }\n}\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { Link } from 'react-router-dom'\n\nimport Textarea from './textarea'\nimport Task from './form/task'\n\nclass Form extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = props.formData\n\n        this.handleInputChange = this.handleInputChange.bind(this)\n        this.handleSubmit = this.handleSubmit.bind(this)\n        this.toggleTask = this.toggleTask.bind(this)\n    }\n\n    handleInputChange(event) {\n        const target = event.target\n        let value = target.type === 'checkbox' ? target.checked : target.value\n        const name = target.name\n\n        switch (name) {\n            case \"DictID\":\n                value = parseInt(value)\n                break;\n        }\n\n        this.setState({\n            [name]: value\n        })\n    }\n\n    toggleTask(n) {\n        let task = this.state.Tasks[n]\n        task = {\n            ...task,\n            Status: task.Status == 'PENDING' ? 'DONE': 'PENDING',\n        }\n\n        const Tasks = [...this.state.Tasks]\n        Tasks[n] = task\n\n        this.setState({ Tasks })\n    }\n\n    handleSubmit(event) {\n        event.preventDefault()\n        this.props.onSave({ formData: this.state })\n    }\n\n    render() {\n        return <form onSubmit={this.handleSubmit}>\n            <div class=\"columns\">\n                <div class=\"column\">\n                    <div class=\"field\">\n                        <label class=\"label\">Dictionary</label>\n                        <div class=\"control\">\n                            <div class=\"select\">\n                                <select name=\"DictID\" value={this.state.DictID} onChange={this.handleInputChange} required >\n                                    <option />\n                                    {this.props.dicts.map(d => <option value={d.ID}>{d.Title}</option>)}\n                                </select>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"column\">\n                    <div class=\"field\">\n                        <label class=\"label\">Tasks</label>\n                        {this.state.Tasks.map((task, index) => {\n                            return <Task onToggle={() => {this.toggleTask(index)}} task={task} index={index+1} />\n                        })}\n                    </div>\n                </div>\n            </div>\n            <div className=\"field\">\n                <div className=\"control\">\n                    <label class=\"label\">Content</label>\n                    <Textarea\n                        className=\"textarea\"\n                        type=\"text\"\n                        name=\"Content\"\n                        rows=\"15\"\n                        value={this.state.Content}\n                        onChange={this.handleInputChange}\n                        onSave={() => { this.submitButton.click() }}\n                    />\n                </div>\n            </div>\n            <div className=\"field is-grouped\">\n                <p class=\"control\">\n                    <button className=\"button is-link\" type=\"submit\"\n                        ref={button => this.submitButton = button}>\n                        Save\n                    </button>\n                </p>\n                <p class=\"control\">\n                    <Link className=\"button\" to={this.props.onCancelRedirectTo}>Cancel</Link>\n                </p>\n            </div>\n        </form>\n    }\n}\n\nexport default connect(\n    state => ({\n        dicts: state.config.Dicts\n    })\n)(Form)\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\n\nimport Form from './form'\nimport { createRecord } from '../actions'\nimport { ifOK } from '../../utils'\n\nclass NewPage extends React.Component {\n    render() {\n        const onSave = (data) => {\n            this.props.createRecord(data)\n                .then(ifOK((data) => this.props.history.push('/articles')))\n        }\n        return (<div>\n            <h1 className=\"title\">Create New Article</h1>\n            <Form\n                formData={{}}\n                onSave={onSave}\n                onCancelRedirectTo=\"/articles\"\n            />\n        </div>)\n    }\n}\n\nexport default connect(\n    state => {},\n    dispatch => bindActionCreators({ createRecord }, dispatch),\n)(NewPage)\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\n\nimport { fetchRecord, leaveRecord, updateRecord} from '../actions'\nimport Form from './form'\n\nclass EditPage extends React.Component {\n    componentWillMount() {\n        this.props.fetchRecord(this.props.match.params.articleID)\n    }\n\n    componentWillUnmount() {\n        this.props.leaveRecord()\n    }\n\n    render() {\n        if (!this.props.data) {\n            return null\n        }\n\n        const onSave = (data) => {\n            this.props.updateRecord(data)\n        }\n\n        return (<div>\n            <h1 className=\"title\">Edit #{this.props.data.ID} `{this.props.data.Title}`</h1>\n            <Form\n                formData={this.props.data}\n                onSave={onSave}\n                onCancelRedirectTo=\"/articles\"\n            />\n        </div>)\n    }\n}\n\nexport default connect(\n    state => ({\n        data: state.articles.record.data,\n    }),\n    dispatch => bindActionCreators({ fetchRecord, leaveRecord, updateRecord }, dispatch)\n)(EditPage)\n","import React from 'react'\nimport { connect } from 'react-redux'\n\nclass Messages extends React.Component {\n    render() {\n        return (<div className=\"messages\">\n            {this.props.messages.map(message => (\n                <div key={message.id} className={`notification is-${message.level}`}>\n                    {message.message}\n                </div>\n            ))}\n        </div>)\n    }\n}\n\nexport default connect(\n    state => ({\n        messages: state.messages\n    })\n)(Messages)\n","const messages = (state = [], action) => {\n    switch (action.type) {\n        case 'MESSAGES/SHOW':\n            return [\n                ...state,\n                {\n                    id: action.message.id,\n                    level: action.message.level,\n                    message: action.message.message,\n                },\n            ]\n        case 'MESSAGES/DISMISS':\n            return state.filter(item => item.id !== action.message.id)\n        default:\n            return state\n    }\n}\n\nexport default messages\n","import { combineReducers } from \"redux\";\n\nconst list = (state = null, action) => {\n    switch (action.type) {\n        case 'DICTIONARIES/LIST/FETCH/FULFILLED':\n            return action.Data\n        case 'DICTIONARIES/LIST/LEAVE':\n            return null\n        default:\n            return state\n    }\n}\n\nexport default combineReducers({\n    list,\n})\n","import { combineReducers } from \"redux\";\n\nconst list = (state = null, action) => {\n    switch (action.type) {\n        case 'ARTICLES/LIST/FETCH/FULFILLED':\n            return action.Data\n        case 'ARTICLES/LIST/LEAVE':\n            return null\n        default:\n            return state\n    }\n}\n\nconst record = (state = {}, action) => {\n    switch (action.type) {\n        case 'ARTICLES/RECORD/FETCH/FULFILLED':\n            return { ...state, data: action.Data }\n        case 'ARTICLES/RECORD/LEAVE':\n            return {}\n        default:\n            return state\n    }\n}\n\nexport default combineReducers({\n    list,\n    record,\n})\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport { createStore, combineReducers, applyMiddleware } from 'redux'\nimport thunkMiddleware from 'redux-thunk'\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\n\nimport TopNav from './core/components/top-nav'\nimport Dictionaries from './dictionaries/components/index'\nimport Articles from './articles/components/index'\nimport HomePage from './home/components/home-page'\nimport Messages from './messages/messages'\n\nimport messages from './messages/reducers'\nimport dictionaries from './dictionaries/reducers'\nimport articles from './articles/reducers'\n\nconst rootReducer = combineReducers({\n    user: (state = {}) => state,\n    config: (state = {}) => state,\n    messages,\n    dictionaries,\n    articles,\n})\n\nconst store = createStore(\n    rootReducer,\n    window.verbumInitData,\n    applyMiddleware(\n        thunkMiddleware,\n    ),\n)\n\nReactDOM.render(\n    <Provider store={store}>\n        <Router basename=\"/admin\">\n            <div>\n                <div>\n                    <TopNav />\n                    <Messages />\n                </div>\n                <section className=\"section\">\n                    <Switch>\n                        <Route exact path=\"/\" component={HomePage} />\n                        <Route path=\"/dictionaries\" component={Dictionaries} />\n                        <Route path=\"/articles\" component={Articles} />\n                    </Switch>\n                </section>\n            </div>\n        </Router>\n    </Provider>,\n    document.getElementById('root')\n)\n","import React from 'react'\n\nexport default class HomePage extends React.Component {\n    render() {\n        return (<div>Verbum Admin Home Page</div>)\n    }\n}\n","import React from 'react'\nimport { Switch, Route } from 'react-router-dom'\n\nimport ListPage from './list-page'\nimport NewPage from './new-page'\n\nexport default class Index extends React.Component {\n    render() {\n        const { path } = this.props.match\n        return (\n            <div className=\"container is-fluid\">\n                <Switch>\n                    <Route exact path={path} component={ListPage} />\n                    <Route path={`${path}/new`} component={NewPage} />\n                </Switch>\n            </div>\n        )\n    }\n}\n","import React from 'react'\nimport { Switch, Route } from 'react-router-dom'\n\nimport ListPage from './list-page'\nimport NewPage from './new-page'\nimport EditPage from './edit-page'\n\nexport default class Index extends React.Component {\n    render() {\n        const { path } = this.props.match\n        return (\n            <div className=\"container is-fluid\">\n                <Switch>\n                    <Route exact path={path} component={ListPage} />\n                    <Route path={`${path}/new`} component={NewPage} />\n                    <Route path={`${path}/:articleID/edit`} component={EditPage} />\n                </Switch>\n            </div>\n        )\n    }\n}\n"],"sourceRoot":""}