{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///external \"React\"","webpack:///external \"ReactRouterDOM\"","webpack:///external \"ReactRedux\"","webpack:///external \"Redux\"","webpack:///external \"SimpleMDE\"","webpack:///external \"ReduxThunk\"","webpack:///external \"ReactDOM\"","webpack:///./frontend/admin/core/components/top-nav.jsx","webpack:///./frontend/admin/messages/actions.js","webpack:///./frontend/admin/utils/index.js","webpack:///./frontend/admin/dictionaries/actions.js","webpack:///./frontend/admin/dictionaries/components/list-page.jsx","webpack:///./frontend/admin/dictionaries/components/form.jsx","webpack:///./frontend/admin/dictionaries/components/new-page.jsx","webpack:///./frontend/admin/articles/components/list-page/filter-dictionary.jsx","webpack:///./frontend/admin/tasks/actions.js","webpack:///./frontend/admin/articles/components/list-page/filter-task.jsx","webpack:///./frontend/admin/articles/actions.js","webpack:///./frontend/admin/articles/components/list-page.jsx","webpack:///./frontend/admin/articles/components/textarea.jsx","webpack:///./frontend/admin/articles/components/form/task.jsx","webpack:///./frontend/admin/articles/components/form.jsx","webpack:///./frontend/admin/articles/components/new-page.jsx","webpack:///./frontend/admin/articles/components/edit-page.jsx","webpack:///./frontend/admin/messages/messages.jsx","webpack:///./frontend/admin/messages/reducers.js","webpack:///./frontend/admin/dictionaries/reducers.js","webpack:///./frontend/admin/articles/reducers.js","webpack:///./frontend/admin/index.jsx","webpack:///./frontend/admin/home/components/home-page.jsx","webpack:///./frontend/admin/dictionaries/components/index.jsx","webpack:///./frontend/admin/articles/components/index.jsx"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","r","value","n","__esModule","object","property","prototype","hasOwnProperty","p","s","React","ReactRouterDOM","ReactRedux","Redux","SimpleMDE","ReduxThunk","ReactDOM","NavLink","path","children","external_React_default","a","createElement","external_ReactRouterDOM_","match","className","to","top_nav","external_ReactRedux_","store","user","Component","render","this","props","showMessage","message","level","dispatch","id","Date","now","type","setTimeout","ifOK","f","ok","req","url","options","actionPrefix","errorMessagePrefix","successMessage","fetch","_extends","credentials","then","response","Promise","resolve","reject","json","catch","data","text","Error","statusText","showSuccessMessage","error","showDangerMessage","console","assembleURLQuery","params","u","URLSearchParams","defaults","_defaults","key","keys","set","result","toString","length","fetchList","leaveList","createDictionary","formData","method","body","JSON","stringify","list_page","state","dictionaries","list","external_Redux_","componentWillMount","componentWillUnmount","class","map","item","Title","form_Form","constructor","super","handleInputChange","bind","handleSubmit","event","target","checked","setState","[object Object]","preventDefault","onSave","onSubmit","onChange","required","onCancelRedirectTo","new_page","history","push","filter_dictionary","dicts","config","Dicts","ev","parseInt","ID","actions_fetchList","urlQuery","filter_task","tasks","Data","articles_actions_fetchList","actions_leaveList","createRecord","leaveRecord","fetchRecord","articleID","updateRecord","components_list_page","articles","list_page_extends","getDefaultState","parse","localStorage","getItem","callback","setItem","offset","limit","filter$DictID","filter$TitlePrefix","filter$TaskID","setFilterState","width","role","aria-label","onClick","Math","max","textarea_Textarea","shouldComponentUpdate","nextProps","nextState","simplemde","setElement","element","newSimpleMDE","codemirror","on","toTextArea","textarea_extends","ref","el","smde","external_SimpleMDE_default","autofocus","spellChecker","toolbar","action","toggleBold","title","toggleItalic","toggleStrikethrough","toggleBlockquote","toggleUnorderedList","toggleOrderedList","headwordAction","addKeyMap","Shift-Alt-W","Cmd-S","selection","getSelection","replaceSelection","focus","task_Task","keyUpHandler","document","addEventListener","removeEventListener","e","index","onToggle","ctrlKey","keyCode","stopPropagation","task","it","style","Status","icon","aria-hidden","Task","components_form","toggleTask","Tasks","form_extends","DictID","rows","Content","submitButton","click","button","components_new_page","edit_page","record","messages","reducers","filter","dictionaries_reducers","articles_reducers","reducers_extends","rootReducer","window","verbumInitData","external_ReduxThunk_default","external_ReactDOM_default","basename","exact","component","getElementById"],"mappings":"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","file":"admin.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 7);\n","module.exports = React;","module.exports = ReactRouterDOM;","module.exports = ReactRedux;","module.exports = Redux;","module.exports = SimpleMDE;","module.exports = ReduxThunk;","module.exports = ReactDOM;","import React from 'react'\nimport { connect } from 'react-redux'\nimport { Link, Route, withRouter } from 'react-router-dom'\n\nclass TopNav extends React.Component {\n    render() {\n        return (<nav className=\"navbar is-link\">\n            <div className=\"navbar-brand\">\n                <Link className=\"navbar-item has-text-weight-bold is-size-4\" to=\"/\">Verbum</Link>\n            </div>\n            <div className=\"navbar-menu\">\n                <div className=\"navbar-start\">\n                    <NavLink path=\"/dictionaries\">Dictionaries</NavLink>\n                    <NavLink path=\"/articles\">Articles</NavLink>\n                </div>\n                <div className=\"navbar-end\">\n                    <div className=\"navbar-item\">\n                        {this.props.user.name}\n                    </div>\n                </div>\n            </div>\n        </nav>)\n    }\n}\n\nconst NavLink = ({ path, children }) => <Route path={path} children={({ match }) => (\n    <Link className={`navbar-item ${match ? 'is-active' : ''}`} to={path}>{children}</Link>\n)} />\n\nexport default withRouter(connect(\n    store => ({\n        user: store.user\n    }),\n)(TopNav))\n","export const showMessage = (message, level = 'info') => (dispatch) => {\n    const id = Date.now()\n    dispatch({\n        type: 'MESSAGES/SHOW',\n        message: { id, message, level },\n    })\n    setTimeout(() => {\n        dispatch({\n            type: 'MESSAGES/DISMISS',\n            message: { id },\n        })\n    }, 5000)\n}\n\nexport const showInfoMessage = message => showMessage(message, 'info')\nexport const showWarningMessage = message => showMessage(message, 'warning')\nexport const showDangerMessage = message => showMessage(message, 'danger')\nexport const showSuccessMessage = message => showMessage(message, 'success')\nexport const showPrimaryMessage = message => showMessage(message, 'primary')\n","import { showSuccessMessage, showDangerMessage } from '../messages/actions'\n\nexport const ifOK = f => ok => (ok ? f(ok) : false)\n\nexport const req = (url, { options, actionPrefix, errorMessagePrefix, successMessage }) => (dispatch) => {\n    dispatch({ type: `${actionPrefix}/PENDING` })\n    return fetch(url, { ...options, credentials: 'include' })\n        .then(response => new Promise((resolve, reject) => {\n            if (response.ok) {\n                response.json()\n                    .then(json => resolve(json))\n                    .catch(() => resolve({ data: {} }))\n            } else {\n                response.text().then((text) => {\n                    reject(new Error(text || response.statusText))\n                })\n            }\n        }))\n        .then((json) => {\n            dispatch({ type: `${actionPrefix}/FULFILLED`, ...json })\n            if (successMessage) {\n                dispatch(showSuccessMessage(successMessage))\n            }\n            return json\n        })\n        .catch((error) => {\n            dispatch({ type: `${actionPrefix}/REJECT` })\n            if (errorMessagePrefix) {\n                dispatch(showDangerMessage(`${errorMessagePrefix}: ${error.message}`))\n            }\n            console.error(error)\n            return false\n        })\n}\n\nexport const parseURLSearchParams = (search) => {\n    const u = new URLSearchParams(search)\n    let result = {}\n    for(var pair of u.entries()) {\n        result[pair[0]] = pair[1]\n    }\n    return result\n}\n\nexport const assembleURLQuery = (params) => {\n    const u = new URLSearchParams()\n    const defaults = params._defaults || {}\n    delete params._defaults\n    for (let key of Object.keys(params)) {\n        if (key in defaults && defaults[key] === params[key]) {\n            continue;\n        }\n        u.set(key, params[key])\n    }\n    let result = u.toString()\n    if (result.length > 0) {\n        result = `?${result}`\n    }\n    return result\n}\n","import { req } from '../utils'\n\nexport const fetchList = () => req('/admin/api/dictionaries', {\n    actionPrefix: 'DICTIONARIES/LIST/FETCH',\n    errorMessagePrefix: 'Failed to fetch Dictionaries list',\n})\n\nexport const leaveList = () => ({ type: 'DICTIONARIES/LIST/LEAVE' })\n\nexport const createDictionary = ({ formData }) => req('/admin/api/dictionaries', {\n    options: {\n        method: 'post',\n        body: JSON.stringify(formData),\n    },\n    actionPrefix: 'DICTIONARIES/DICTIONARY/CREATE',\n    errorMessagePrefix: 'Failed to create the dictionary',\n    successMessage: 'Dictionary has been created successfully',\n})\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\n\nimport { fetchList, leaveList } from '../actions'\n\nclass ListPage extends React.Component {\n    componentWillMount() {\n        this.props.fetchList()\n    }\n\n    componentWillUnmount() {\n        this.props.leaveList()\n    }\n\n    render() {\n        const { url } = this.props.match\n        return (<div>\n            <div className=\"level\">\n                <div className=\"level-left\">\n                    <h1 className=\"level-item title\">Dictionaries</h1>\n                </div>\n                <div className=\"level-right\">\n                    <div className=\"field is-grouped level-item\">\n                        <p class=\"control\">\n                            <Link to={`${url}/new`} className=\"button is-link\">New Dictionary</Link>\n                        </p>\n                    </div>\n                </div>\n            </div>\n            <hr />\n            {this.props.data &&\n            <table className=\"table is-hoverable is-fullwidth\">\n                <thead>\n                    <tr><th>Title</th></tr>\n                </thead>\n                <tbody>\n                    {this.props.data.map(item => <tr><td>{item.Title}</td></tr>)}\n                </tbody>\n            </table>\n            }\n\n        </div>)\n    }\n}\n\nexport default connect(\n    state => ({\n        data: state.dictionaries.list,\n    }),\n    dispatch => bindActionCreators({ fetchList, leaveList }, dispatch),\n)(ListPage)\n","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nexport default class Form extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = props.formData\n\n        this.handleInputChange = this.handleInputChange.bind(this)\n        this.handleSubmit = this.handleSubmit.bind(this)\n    }\n\n    handleInputChange(event) {\n        const target = event.target\n        let value = target.type === 'checkbox' ? target.checked : target.value\n        const name = target.name\n\n        this.setState({\n            [name]: value\n        })\n    }\n\n    handleSubmit(event) {\n        event.preventDefault()\n        this.props.onSave({ formData: this.state })\n    }\n\n    render() {\n        return <form onSubmit={this.handleSubmit}>\n            <div class=\"field\">\n                <label class=\"label\">Title</label>\n                <div class=\"control\">\n                    <input className=\"input\"\n                        type=\"text\"\n                        name=\"Title\"\n                        value={this.state.Title}\n                        onChange={this.handleInputChange}\n                        required\n                    />\n                </div>\n            </div>\n            <div className=\"field is-grouped\">\n                <p class=\"control\">\n                    <button className=\"button is-link\" type=\"submit\">Save</button>\n                </p>\n                <p class=\"control\">\n                    <Link className=\"button\" to={this.props.onCancelRedirectTo}>Cancel</Link>\n                </p>\n            </div>\n        </form>\n    }\n}\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\n\nimport Form from './form'\nimport { createDictionary } from '../actions'\nimport { ifOK } from '../../utils'\n\nclass NewPage extends React.Component {\n    render() {\n        const onSave = (data) => {\n            this.props.createDictionary(data)\n                .then(ifOK((data) => this.props.history.push('/dictionaries')))\n        }\n        return (<div>\n            <h1 className=\"title\">Create New Dictionary</h1>\n            <Form\n                formData={{}}\n                onSave={onSave}\n                onCancelRedirectTo=\"/dictionaries\"\n            />\n        </div>)\n    }\n}\n\nexport default connect(\n    state => {},\n    dispatch => bindActionCreators({ createDictionary }, dispatch),\n)(NewPage)\n","import React from 'react'\nimport { connect } from 'react-redux'\n\nclass FilterDictionary extends React.Component {\n    render() {\n        const { value, dicts, onChange } = this.props\n        return (<div class=\"select\">\n            <select value={value} onChange={(ev) => onChange(parseInt(ev.target.value))}>\n                <option value=\"-1\">- Filter by Dictionary -</option>\n                {dicts.map(d => <option value={d.ID}>{d.Title}</option>)}\n            </select>\n        </div>)\n    }\n}\n\nexport default connect(\n    state => ({\n        dicts: state.config.Dicts\n    })\n)(FilterDictionary)\n","import { req, assembleURLQuery } from '../utils'\n\nexport const fetchList = (urlQuery) => req(`/admin/api/tasks${assembleURLQuery(urlQuery)}`, {\n    actionPrefix: 'TASKS/LIST/FETCH',\n    errorMessagePrefix: 'Failed to fetch Tasks list',\n})\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\n\nimport { fetchList } from '../../../tasks/actions'\nimport { ifOK } from '../../../utils'\n\nclass FilterTask extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            tasks: null\n        }\n    }\n    componentWillMount() {\n        this.props.fetchList({}).then(ifOK( data => this.setState({ tasks: data.Data }) ))\n    }\n\n    render() {\n        if (!this.state.tasks) {\n            return null\n        }\n\n        const { value, onChange } = this.props\n        const tasks = this.state.tasks\n        return (<div class=\"select\">\n            <select value={value} onChange={(ev) => onChange(parseInt(ev.target.value))}>\n                <option value=\"-1\">- Filter by Task -</option>\n                {tasks.map(d => <option value={d.ID}>{d.Title}</option>)}\n            </select>\n        </div>)\n    }\n}\n\nexport default connect(\n    state => ({}),\n    dispatch => bindActionCreators({ fetchList }, dispatch),\n\n)(FilterTask)\n","import { req, assembleURLQuery } from '../utils'\n\nexport const fetchList = (urlQuery) => req(`/admin/api/articles${assembleURLQuery(urlQuery)}`, {\n    actionPrefix: 'ARTICLES/LIST/FETCH',\n    errorMessagePrefix: 'Failed to fetch Articles list',\n})\n\nexport const leaveList = () => ({ type: 'ARTICLES/LIST/LEAVE' })\n\nexport const createRecord = ({ formData }) => req('/admin/api/articles', {\n    options: {\n        method: 'post',\n        body: JSON.stringify(formData),\n    },\n    actionPrefix: 'ARTICLES/RECORD/CREATE',\n    errorMessagePrefix: 'Failed to create article',\n    successMessage: 'Article has been created',\n})\n\nexport const leaveRecord = () => ({ type: 'ARTICLES/RECORD/LEAVE' })\n\nexport const fetchRecord = (articleID)  => req(`/admin/api/articles/${articleID}`, {\n    actionPrefix: 'ARTICLES/RECORD/FETCH',\n    errorMessagePrefix: 'Failed to fetch article',\n})\n\nexport const updateRecord = ({ formData }) => req(`/admin/api/articles`, {\n    options: {\n        method: 'post',\n        body: JSON.stringify(formData),\n    },\n    actionPrefix: 'ARTICLES/RECORD/UPDATE',\n    errorMessagePrefix: 'Failed to update article',\n    successMessage: 'Article has been updated',\n})\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\n\nimport FilterDictionary from './list-page/filter-dictionary'\nimport FilterTask from './list-page/filter-task'\nimport { fetchList, leaveList } from '../actions'\nimport { parseURLSearchParams, assembleURLQuery } from '../../utils'\n\nclass ListPage extends React.Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            ...this.getDefaultState(),\n            ...JSON.parse(localStorage.getItem('articles.list-page-state') || '{}')\n        }\n    }\n\n    setState(props, callback) {\n        return super.setState(props, () => {\n            localStorage.setItem('articles.list-page-state', JSON.stringify(this.state))\n            callback()\n        })\n    }\n\n    componentWillMount() {\n        this.fetchList()\n    }\n\n    componentWillUnmount() {\n        this.props.leaveList()\n    }\n\n    fetchList() {\n        this.props.fetchList({\n            offset: this.state.offset,\n            limit: this.state.limit,\n            filter$DictID: this.state.filter$DictID,\n            filter$TitlePrefix: this.state.filter$TitlePrefix,\n            filter$TaskID: this.state.filter$TaskID,\n            _defaults: this.getDefaultState(),\n        })\n    }\n\n    getDefaultState() {\n        return {\n            offset: 0,\n            limit: 20,\n            filter$DictID: -1,\n            filter$TitlePrefix: '',\n            filter$TaskID: -1,\n        }\n    }\n\n    setFilterState(state) {\n        this.setState({ ...state, offset: 0 }, () => { this.fetchList() })\n    }\n\n    render() {\n        const { url } = this.props.match\n        const onPrevPageClick = () => {\n            const offset = Math.max(0, this.state.offset - this.state.limit)\n            this.setState({ offset }, () => { this.fetchList() })\n        }\n\n        const onNextPageClick = () => {\n            const offset = this.state.offset + this.state.limit\n            this.setState({ offset }, () => { this.fetchList() })\n        }\n\n        return (<div>\n            <div className=\"level\">\n                <div className=\"level-left\">\n                    <h1 className=\"level-item title\">Articles</h1>\n                </div>\n                <div className=\"level-right\">\n                    <div className=\"field is-grouped level-item\">\n                        <p class=\"control\">\n                            <Link to={`${url}/new`} className=\"button is-link\">New Article</Link>\n                        </p>\n                    </div>\n                </div>\n            </div>\n            <hr />\n            {/* filter */}\n            <div class=\"field is-grouped\">\n                <p class=\"control\">\n                    <input\n                        class=\"input\"\n                        type=\"text\"\n                        value={this.state.filter$TitlePrefix}\n                        onChange={ev => this.setFilterState({ filter$TitlePrefix: ev.target.value })}\n                    />\n                </p>\n                <p class=\"control\">\n                    <FilterDictionary value={this.state.filter$DictID} onChange={filter$DictID => this.setFilterState({ filter$DictID })} />\n                </p>\n                <p class=\"control\">\n                    <FilterTask value={this.state.filter$TaskID} onChange={filter$TaskID => this.setFilterState({ filter$TaskID })} />\n                </p>\n            </div>\n\n            {this.props.data &&\n                <div>\n                    {/* table */}\n                    <table className=\"table is-hoverable is-fullwidth\">\n                        <thead>\n                            <tr>\n                                <th width=\"1px\">ID</th>\n                                <th>Title</th>\n                                <th width=\"1px\"></th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {this.props.data.map(item => <tr>\n                                <td>{item.ID}</td>\n                                <td>{item.Title}</td>\n                                <td><Link to={`${url}/${item.ID}/edit`} className=\"button\">Edit</Link>\n                                </td>\n                            </tr>)}\n                        </tbody>\n                    </table>\n                </div>\n            }\n            <nav class=\"pagination\" role=\"navigation\" aria-label=\"pagination\">\n                <a class=\"pagination-previous\" onClick={onPrevPageClick}>Previous</a>\n                <a class=\"pagination-next\" onClick={onNextPageClick}>Next page</a>\n            </nav>\n        </div>)\n    }\n}\n\nexport default connect(\n    state => ({\n        data: state.articles.list,\n    }),\n    dispatch => bindActionCreators({ fetchList, leaveList }, dispatch),\n)(ListPage)\n","import React from 'react'\nimport SimpleMDE from 'simplemde'\n\nexport default class Textarea extends React.Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        return nextProps.value != this.simplemde.value()\n    }\n\n    setElement(element) {\n        this.element = element\n        if (element) {\n            this.simplemde = this.newSimpleMDE(element)\n            this.simplemde.codemirror.on('change', () => {\n                this.props.onChange({\n                    target: {\n                        name: this.props.name,\n                        value: this.simplemde.value(),\n                    }\n                })\n            })\n        } else {\n            this.simplemde.toTextArea()\n            this.simplemde = null\n        }\n    }\n\n    render() {\n        return <textarea {...this.props} ref={(el) => {this.setElement(el)}}/>\n    }\n\n    newSimpleMDE(element) {\n        const smde = new SimpleMDE({\n            element,\n            autofocus: true,\n            spellChecker: false,\n            toolbar: [\n                {\n                    name: \"bold\",\n                    action: SimpleMDE.toggleBold,\n                    title: \"Bold\",\n                    className: \"fa fa-bold\",\n                },\n                {\n                    name: \"italic\",\n                    action: SimpleMDE.toggleItalic,\n                    title: \"Italic\",\n                    className: \"fa fa-italic\",\n                },\n                {\n                    name: \"strikethrough\",\n                    action: SimpleMDE.toggleStrikethrough,\n                    title: \"Strikethrough\",\n                    className: \"fa fa-strikethrough\",\n                },\n                {\n                    name: \"quote\",\n                    action: SimpleMDE.toggleBlockquote,\n                    title: \"Quote\",\n                    className: \"fa fa-quote-left\",\n                },\n                \"|\",\n                {\n                    name: \"unordered-list\",\n                    action: SimpleMDE.toggleUnorderedList,\n                    title: \"Generic List\",\n                    className: \"fa fa-list-ul\",\n                },\n                {\n                    name: \"ordered-list\",\n                    action: SimpleMDE.toggleOrderedList,\n                    title: \"Numbered List\",\n                    className: \"fa fa-list-ol\",\n                },\n                \"|\",\n                {\n                    name: \"headword\",\n                    action: ({ codemirror }) => { this.headwordAction(codemirror) },\n                    title: \"Headword\",\n                    className: \"fa fa-header color-tag\",\n                }\n            ],\n        })\n        smde.codemirror.addKeyMap({\n            'Shift-Alt-W': this.headwordAction,\n            'Cmd-S': this.props.onSave,\n        }, true)\n        return smde\n    }\n\n    headwordAction(codemirror) {\n        const selection = codemirror.getSelection()\n        codemirror.replaceSelection(`<v-hw>${selection}</v-hw>`, 'around')\n        codemirror.focus()\n    }\n}\n","import React from 'react'\n\nexport default class Task extends React.Component {\n    constructor(props) {\n        super(props)\n        this.keyUpHandler = this.keyUpHandler.bind(this)\n    }\n\n    componentWillMount() {\n        document.addEventListener('keyup', this.keyUpHandler)\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('keyup', this.keyUpHandler)\n    }\n\n    keyUpHandler(e) {\n        const { index, onToggle } = this.props\n        if (e.ctrlKey && e.keyCode - 48 == index ) {\n            e.preventDefault()\n            e.stopPropagation()\n            onToggle()\n        }\n    }\n\n    render() {\n        const { onToggle, task: it, index: i } = this.props\n\n        const style = it.Status == 'PENDING' ? 'is-info' : 'is-success'\n        const icon = it.Status == 'PENDING'\n            ? <i class=\"fa fa-circle-o\" aria-hidden=\"true\"></i>\n            : <i class=\"fa fa-check-circle\" aria-hidden=\"true\"></i>\n        return (<div>\n            <a class={`button ${style}`} onClick={onToggle}>\n                {icon}&nbsp;({i})&nbsp;{it.Task.Title}\n            </a>\n        </div>)\n    }\n}\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { Link } from 'react-router-dom'\n\nimport Textarea from './textarea'\nimport Task from './form/task'\n\nclass Form extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = props.formData\n\n        this.handleInputChange = this.handleInputChange.bind(this)\n        this.handleSubmit = this.handleSubmit.bind(this)\n        this.toggleTask = this.toggleTask.bind(this)\n    }\n\n    handleInputChange(event) {\n        const target = event.target\n        let value = target.type === 'checkbox' ? target.checked : target.value\n        const name = target.name\n\n        switch (name) {\n            case \"DictID\":\n                value = parseInt(value)\n                break;\n        }\n\n        this.setState({\n            [name]: value\n        })\n    }\n\n    toggleTask(n) {\n        let task = this.state.Tasks[n]\n        task = {\n            ...task,\n            Status: task.Status == 'PENDING' ? 'DONE': 'PENDING',\n        }\n\n        const Tasks = [...this.state.Tasks]\n        Tasks[n] = task\n\n        this.setState({ Tasks })\n    }\n\n    handleSubmit(event) {\n        event.preventDefault()\n        this.props.onSave({ formData: this.state })\n    }\n\n    render() {\n        return <form onSubmit={this.handleSubmit}>\n            <div class=\"columns\">\n                <div class=\"column\">\n                    <div class=\"field\">\n                        <label class=\"label\">Dictionary</label>\n                        <div class=\"control\">\n                            <div class=\"select\">\n                                <select name=\"DictID\" value={this.state.DictID} onChange={this.handleInputChange} required >\n                                    <option />\n                                    {this.props.dicts.map(d => <option value={d.ID}>{d.Title}</option>)}\n                                </select>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"column\">\n                    <div class=\"field\">\n                        <label class=\"label\">Tasks</label>\n                        {this.state.Tasks.map((task, index) => {\n                            return <Task onToggle={() => {this.toggleTask(index)}} task={task} index={index+1} />\n                        })}\n                    </div>\n                </div>\n            </div>\n            <div className=\"field\">\n                <div className=\"control\">\n                    <label class=\"label\">Content</label>\n                    <Textarea\n                        className=\"textarea\"\n                        type=\"text\"\n                        name=\"Content\"\n                        rows=\"15\"\n                        value={this.state.Content}\n                        onChange={this.handleInputChange}\n                        onSave={() => { this.submitButton.click() }}\n                    />\n                </div>\n            </div>\n            <div className=\"field is-grouped\">\n                <p class=\"control\">\n                    <button className=\"button is-link\" type=\"submit\"\n                        ref={button => this.submitButton = button}>\n                        Save\n                    </button>\n                </p>\n                <p class=\"control\">\n                    <Link className=\"button\" to={this.props.onCancelRedirectTo}>Cancel</Link>\n                </p>\n            </div>\n        </form>\n    }\n}\n\nexport default connect(\n    state => ({\n        dicts: state.config.Dicts\n    })\n)(Form)\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\n\nimport Form from './form'\nimport { createRecord } from '../actions'\nimport { ifOK } from '../../utils'\n\nclass NewPage extends React.Component {\n    render() {\n        const onSave = (data) => {\n            this.props.createRecord(data)\n                .then(ifOK((data) => this.props.history.push('/articles')))\n        }\n        return (<div>\n            <h1 className=\"title\">Create New Article</h1>\n            <Form\n                formData={{}}\n                onSave={onSave}\n                onCancelRedirectTo=\"/articles\"\n            />\n        </div>)\n    }\n}\n\nexport default connect(\n    state => {},\n    dispatch => bindActionCreators({ createRecord }, dispatch),\n)(NewPage)\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\n\nimport { fetchRecord, leaveRecord, updateRecord} from '../actions'\nimport Form from './form'\n\nclass EditPage extends React.Component {\n    componentWillMount() {\n        this.props.fetchRecord(this.props.match.params.articleID)\n    }\n\n    componentWillUnmount() {\n        this.props.leaveRecord()\n    }\n\n    render() {\n        if (!this.props.data) {\n            return null\n        }\n\n        const onSave = (data) => {\n            this.props.updateRecord(data)\n        }\n\n        return (<div>\n            <h1 className=\"title\">Edit #{this.props.data.ID} `{this.props.data.Title}`</h1>\n            <Form\n                formData={this.props.data}\n                onSave={onSave}\n                onCancelRedirectTo=\"/articles\"\n            />\n        </div>)\n    }\n}\n\nexport default connect(\n    state => ({\n        data: state.articles.record.data,\n    }),\n    dispatch => bindActionCreators({ fetchRecord, leaveRecord, updateRecord }, dispatch)\n)(EditPage)\n","import React from 'react'\nimport { connect } from 'react-redux'\n\nclass Messages extends React.Component {\n    render() {\n        return (<div className=\"messages\">\n            {this.props.messages.map(message => (\n                <div key={message.id} className={`notification is-${message.level}`}>\n                    {message.message}\n                </div>\n            ))}\n        </div>)\n    }\n}\n\nexport default connect(\n    state => ({\n        messages: state.messages\n    })\n)(Messages)\n","const messages = (state = [], action) => {\n    switch (action.type) {\n        case 'MESSAGES/SHOW':\n            return [\n                ...state,\n                {\n                    id: action.message.id,\n                    level: action.message.level,\n                    message: action.message.message,\n                },\n            ]\n        case 'MESSAGES/DISMISS':\n            return state.filter(item => item.id !== action.message.id)\n        default:\n            return state\n    }\n}\n\nexport default messages\n","import { combineReducers } from \"redux\";\n\nconst list = (state = null, action) => {\n    switch (action.type) {\n        case 'DICTIONARIES/LIST/FETCH/FULFILLED':\n            return action.Data\n        case 'DICTIONARIES/LIST/LEAVE':\n            return null\n        default:\n            return state\n    }\n}\n\nexport default combineReducers({\n    list,\n})\n","import { combineReducers } from \"redux\";\n\nconst list = (state = null, action) => {\n    switch (action.type) {\n        case 'ARTICLES/LIST/FETCH/FULFILLED':\n            return action.Data\n        case 'ARTICLES/LIST/LEAVE':\n            return null\n        default:\n            return state\n    }\n}\n\nconst record = (state = {}, action) => {\n    switch (action.type) {\n        case 'ARTICLES/RECORD/FETCH/FULFILLED':\n            return { ...state, data: action.Data }\n        case 'ARTICLES/RECORD/LEAVE':\n            return {}\n        default:\n            return state\n    }\n}\n\nexport default combineReducers({\n    list,\n    record,\n})\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport { createStore, combineReducers, applyMiddleware } from 'redux'\nimport thunkMiddleware from 'redux-thunk'\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\n\nimport TopNav from './core/components/top-nav'\nimport Dictionaries from './dictionaries/components/index'\nimport Articles from './articles/components/index'\nimport HomePage from './home/components/home-page'\nimport Messages from './messages/messages'\n\nimport messages from './messages/reducers'\nimport dictionaries from './dictionaries/reducers'\nimport articles from './articles/reducers'\n\nconst rootReducer = combineReducers({\n    user: (state = {}) => state,\n    config: (state = {}) => state,\n    messages,\n    dictionaries,\n    articles,\n})\n\nconst store = createStore(\n    rootReducer,\n    window.verbumInitData,\n    applyMiddleware(\n        thunkMiddleware,\n    ),\n)\n\nReactDOM.render(\n    <Provider store={store}>\n        <Router basename=\"/admin\">\n            <div>\n                <div>\n                    <TopNav />\n                    <Messages />\n                </div>\n                <section className=\"section\">\n                    <Switch>\n                        <Route exact path=\"/\" component={HomePage} />\n                        <Route path=\"/dictionaries\" component={Dictionaries} />\n                        <Route path=\"/articles\" component={Articles} />\n                    </Switch>\n                </section>\n            </div>\n        </Router>\n    </Provider>,\n    document.getElementById('root')\n)\n","import React from 'react'\n\nexport default class HomePage extends React.Component {\n    render() {\n        return (<div>Verbum Admin Home Page</div>)\n    }\n}\n","import React from 'react'\nimport { Switch, Route } from 'react-router-dom'\n\nimport ListPage from './list-page'\nimport NewPage from './new-page'\n\nexport default class Index extends React.Component {\n    render() {\n        const { path } = this.props.match\n        return (\n            <div className=\"container is-fluid\">\n                <Switch>\n                    <Route exact path={path} component={ListPage} />\n                    <Route path={`${path}/new`} component={NewPage} />\n                </Switch>\n            </div>\n        )\n    }\n}\n","import React from 'react'\nimport { Switch, Route } from 'react-router-dom'\n\nimport ListPage from './list-page'\nimport NewPage from './new-page'\nimport EditPage from './edit-page'\n\nexport default class Index extends React.Component {\n    render() {\n        const { path } = this.props.match\n        return (\n            <div className=\"container is-fluid\">\n                <Switch>\n                    <Route exact path={path} component={ListPage} />\n                    <Route path={`${path}/new`} component={NewPage} />\n                    <Route path={`${path}/:articleID/edit`} component={EditPage} />\n                </Switch>\n            </div>\n        )\n    }\n}\n"],"sourceRoot":""}